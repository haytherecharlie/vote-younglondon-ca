{"version":3,"sources":["webpack:///./src/ui/atoms/Link/Link.style.ts","webpack:///./src/ui/atoms/Link/Link.component.tsx","webpack:///./src/ui/pages/Thanks.tsx","webpack:///./src/ui/atoms/Text/Text.style.ts","webpack:///./src/ui/atoms/Text/Text.component.tsx"],"names":["ButtonLink","styled","P","display","flexDirection","jusitfyContent","alignItems","border","background","cursor","padding","style","ExternalLink","textDecoration","InternalLink","Link","type","href","onClick","children","to","Thanks","PageLayout","page","crawl","justifyContent","Text","size","text","textAlign","marginTop","bold","unique","LinkStyle","true","textDecorationColor","theme","BRAND_COLOR","false","XLarge","fontSize","FONT_LARGE","fontWeight","fontFamily","letterSpacing","color","PRIMARY_COLOR","margin","link","Large","Medium","FONT_MEDIUM","Small","FONT_SMALL","XSmall","formatMessage"],"mappings":"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","file":"component---src-ui-pages-thanks-tsx-ccd7976e505fe577a752.js","sourcesContent":["import { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nexport const ButtonLink = styled('button')(P => ({\n  display: `flex`,\n  flexDirection: 'row',\n  jusitfyContent: 'center',\n  alignItems: 'center',\n  border: 'none',\n  background: 'transparent',\n  cursor: 'pointer',\n  padding: 0,\n  ...P.style\n}))\n\nexport const ExternalLink = styled('a')(P => ({\n  display: `flex`,\n  flexDirection: 'row',\n  jusitfyContent: 'center',\n  alignItems: 'center',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  ...P.style\n}))\n\nexport const InternalLink = styled(Link)(P => ({\n  display: `flex`,\n  flexDirection: 'row',\n  jusitfyContent: 'center',\n  alignItems: 'center',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  ...P.style\n}))\n","import React from 'react'\nimport * as S from './Link.style'\n\nconst Link = ({ type = null, href = null, onClick = null, children = null, style = {} }) => {\n  switch (type) {\n    case 'button':\n      return (\n        <S.ButtonLink style={style} onClick={onClick}>\n          {children}\n        </S.ButtonLink>\n      )\n    case 'external':\n      return (\n        <S.ExternalLink style={style} href={href} onClick={onClick}>\n          {children}\n        </S.ExternalLink>\n      )\n    default:\n      return (\n        <S.InternalLink style={style} to={href || '/'} onClick={onClick}>\n          {children}\n        </S.InternalLink>\n      )\n  }\n}\n\nexport default Link\n","import React from 'react'\nimport Link from 'ui/atoms/Link'\nimport Text from 'ui/atoms/Text'\nimport PageLayout from 'ui/layouts/PageLayout'\n\nconst Thanks = () => {\n  return (\n    <PageLayout page=\"thanks\" crawl={false} style={{ alignItems: 'center', justifyContent: 'center' }}>\n      <Text size=\"XL\" text=\"Thank You!\" style={{ textAlign: 'center', marginTop: 10 }} bold unique />\n      <Text size=\"M\" text=\"Your vote has been submitted\" style={{ textAlign: 'center' }} bold unique />\n      <Link type=\"external\" href=\"https://younglondon.ca/\">\n        <Text size=\"S\" text=\"Return to Young London\" style={{ marginTop: 10, textAlign: 'center', textDecoration: 'underline' }} unique />\n      </Link>\n    </PageLayout>\n  )\n}\n\nexport default Thanks\n","import styled from 'styled-components'\nimport theme from 'ui/assets/theme'\n\nconst LinkStyle = {\n  true: {\n    textDecoration: `underline`,\n    textDecorationColor: theme.BRAND_COLOR,\n    '&:hover': {\n      textDecoration: 'none'\n    }\n  },\n  false: {}\n}\n\nexport const XLarge = styled('h1')(P => ({\n  fontSize: theme.FONT_LARGE,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n\nexport const Large = styled('h2')(P => ({\n  fontSize: theme.FONT_LARGE,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  marginTop: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n\nexport const Medium = styled('h3')(P => ({\n  fontSize: theme.FONT_MEDIUM,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  marginTop: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n\nexport const Small = styled('p')(P => ({\n  fontSize: theme.FONT_SMALL,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n\nexport const XSmall = styled('p')(P => ({\n  fontSize: theme.FONT_SMALL,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n","import React from 'react'\nimport { formatMessage } from 'ui/language/translations'\nimport * as S from './Text.style'\n\nconst Text = ({ size = 'M', bold = false, text = 'placeholder', style = {}, unique = false, link = false }) => {\n  if (size === 'XL') {\n    return (\n      <S.XLarge bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.XLarge>\n    )\n  }\n\n  if (size === 'L') {\n    return (\n      <S.Large bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.Large>\n    )\n  }\n\n  if (size === 'M') {\n    return (\n      <S.Medium bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.Medium>\n    )\n  }\n\n  if (size === 'S') {\n    return (\n      <S.Small bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.Small>\n    )\n  }\n\n  if (size === 'XS') {\n    return (\n      <S.XSmall bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.XSmall>\n    )\n  }\n}\n\nexport default Text\n"],"sourceRoot":""}