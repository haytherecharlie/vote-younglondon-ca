{"version":3,"sources":["webpack:///./src/ui/pages/Results.tsx","webpack:///./src/ui/atoms/Text/Text.style.ts","webpack:///./src/ui/atoms/Text/Text.component.tsx"],"names":["Results","useState","results","setResults","useEffect","getResults","then","data","style","minHeight","width","display","alignItems","justifyContent","textAlign","size","text","bold","unique","Object","entries","candidates","map","key","value","paddingRight","toString","total","LinkStyle","true","textDecoration","textDecorationColor","theme","BRAND_COLOR","false","XLarge","styled","P","fontSize","FONT_LARGE","fontWeight","fontFamily","letterSpacing","color","PRIMARY_COLOR","margin","padding","link","Large","marginTop","Medium","FONT_MEDIUM","Small","FONT_SMALL","XSmall","Text","formatMessage"],"mappings":"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","file":"component---src-ui-pages-results-tsx-17005326629fe6083dfc.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getResults } from 'api/routes'\nimport Text from 'ui/atoms/Text'\n\nconst Results = () => {\n  const [results, setResults] = useState(null)\n  useEffect(() => {\n    getResults().then(data => setResults(data))\n  }, [])\n\n  return results ? (\n    <div\n      style={{ minHeight: `100vh`, width: `100vw`, display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n      <table style={{ textAlign: 'left' }}>\n        <thead>\n          <tr>\n            <th>\n              <Text size=\"M\" text=\"CANDIDATE\" bold unique />\n            </th>\n            <th>\n              <Text size=\"M\" text=\"VOTES\" bold unique />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(results.candidates).map(([key, value]) => (\n            <tr key={key}>\n              <td style={{ paddingRight: 30 }}>\n                <Text size=\"M\" text={key} unique />\n              </td>\n              <td>\n                <Text size=\"M\" text={value.toString()} unique />\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td>\n              <Text size=\"M\" text=\"TOTAL VOTES: \" unique />\n            </td>\n            <td>\n              <Text size=\"M\" text={results.total.toString()} unique />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  ) : (\n    <div>loading...</div>\n  )\n}\n\nexport default Results\n","import styled from 'styled-components'\nimport theme from 'ui/assets/theme'\n\nconst LinkStyle = {\n  true: {\n    textDecoration: `underline`,\n    textDecorationColor: theme.BRAND_COLOR,\n    '&:hover': {\n      textDecoration: 'none'\n    }\n  },\n  false: {}\n}\n\nexport const XLarge = styled('h1')(P => ({\n  fontSize: theme.FONT_LARGE,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n\nexport const Large = styled('h2')(P => ({\n  fontSize: theme.FONT_LARGE,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  marginTop: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n\nexport const Medium = styled('h3')(P => ({\n  fontSize: theme.FONT_MEDIUM,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  marginTop: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n\nexport const Small = styled('p')(P => ({\n  fontSize: theme.FONT_SMALL,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n\nexport const XSmall = styled('p')(P => ({\n  fontSize: theme.FONT_SMALL,\n  fontWeight: 500,\n  fontFamily: 'lyac',\n  letterSpacing: 0,\n  color: theme.PRIMARY_COLOR,\n  margin: 0,\n  padding: 0,\n  ...LinkStyle[P.link],\n  ...P.style\n}))\n","import React from 'react'\nimport { formatMessage } from 'ui/language/translations'\nimport * as S from './Text.style'\n\nconst Text = ({ size = 'M', bold = false, text = 'placeholder', style = {}, unique = false, link = false }) => {\n  if (size === 'XL') {\n    return (\n      <S.XLarge bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.XLarge>\n    )\n  }\n\n  if (size === 'L') {\n    return (\n      <S.Large bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.Large>\n    )\n  }\n\n  if (size === 'M') {\n    return (\n      <S.Medium bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.Medium>\n    )\n  }\n\n  if (size === 'S') {\n    return (\n      <S.Small bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.Small>\n    )\n  }\n\n  if (size === 'XS') {\n    return (\n      <S.XSmall bold={bold} style={style} link={link}>\n        {unique ? text : formatMessage(text)}\n      </S.XSmall>\n    )\n  }\n}\n\nexport default Text\n"],"sourceRoot":""}